# vim filetupe=bash
ga() { grommunio-admin $@ ; }
complete -F _python_argcomplete grommunio-admin ga
#gromtail() { find /var/log/grom* /var/log/nginx /var/log/mysql /var/log/php* -type f -iname "*log" -exec tail -f "{}" + | awk '/^==> / {a=substr($0, 5, length-8); next} {print a":"$0}' ; }
gromtail() { find /var/log/grom* /var/log/nginx /var/log/mysql /var/log/php* -type f -iname "*log" -exec tail -f "{}" + ; }
alias _grom_clear_index='rm -Rf /var/lib/grommunio-web/sqlite-index/*;  /usr/sbin/grommunio-index-run.sh'
alias bat='bat -p' #BAT CAT!
alias fail2list='fail2ban-client status |sed -n "s/,//g;s/.*Jail list:[[:space:]]//p"|xargs -n 1 fail2ban-client status |grep -E "^Status|Banned IP list"'
#alias gdiff='git diff HEAD^ HEAD'
alias gcom='git commit --verbose --status'
alias gcoma='git commit --verbose --status --all'
alias gdesc='git describe --tags `git rev-list --tags --max-count=50`'
alias gitundo='git checkout -- '
alias glog='git log --graph --decorate=full --name-status'
alias gloga='git log --graph --decorate=full --name-status --all ^'
alias glogf='git log --graph --decorate=full --follow -p'
alias gnit='git diff --cached'
alias gp='git pull'
alias gstat='git status -s -b -u'
alias gtree="tree -I \"$(grep -hvE '^$|^#' {,$(git rev-parse --show-toplevel 2>/dev/null)/}.gitignore $(git rev-parse --show-toplevel 2>/dev/null)/.git/info/exclude 2>/dev/null |sed 's:/$::'|tr \\n '\|')\""
alias grep='grep -iE --color'
alias gromdf='df -h / /var/lib/gromox /boot'
alias gromjournal='journalctl -f -u grommunio-admin-api.service -u grommunio-cui@tty1.service -u gromox-delivery-queue.service -u gromox-delivery.service -u gromox-event.service -u gromox-http.service -u gromox-imap.service -u gromox-midb.service -u gromox-pop3.service -u gromox-timer.service -u gromox-zcore.service -u nginx.service -u php-fpm.service -u postfix.service'
alias gst='grommunio-sync-top'
alias l='ls -lah'
alias la='ls -lAh'
alias ll='ls -lh'
alias ls='ls --color=tty'
alias lsa='ls -lah'
alias qdu="find -mindepth 1 -maxdepth 1 -path ./sys -prune -o -path ./proc -prune -o -print0 | xargs -0 du -hsx | sort -h"
alias renix='nginx -t && nginx -s reload'
alias systemctl="systemctl --no-pager"
alias fail2list='fail2ban-client status |sed -n "s/,//g;s/.*Jail list:[[:space:]]//p"|xargs -n 1 fail2ban-client status |grep -E "^Status|Banned IP list"'
gdiff () {
        local N
        test "$1" -eq "$1" && N="$1"  || N=1
        git diff HEAD~${N} HEAD
}


zypup() {
  	if test -f /etc/debian_version; then
		apt-get update -q
		apt-get dist-upgrade
	else
		local NEEDRESTART
		zypp-refresh
		zypper --verbose --no-refresh up
		if [ -f /var/lib/check_mk_agent/cache/plugins_mk_zypper.cache ]; then
			rm -vf /var/lib/check_mk_agent/cache/plugins_mk_zypper.cache
		fi
		NEEDRESTART=$(zypper ps --print "systemctl status %s" | awk '/systemctl status / { line = (line? line FS $3: $3) } END { print line }')
		if test -n "$NEEDRESTART"; then
			echo "There are Services which might need a restart"
			echo -e "\v\t$NEEDRESTART\v"
			read -r -p "Want to restart them now? [y/N] " DORESTART
			if [[ "$DORESTART" =~ ^([yY][eE][sS]|[yY])$ ]]; then
				systemctl restart $NEEDRESTART
			fi
		fi
	fi
}

if test -n "$(command -vp snapper)"; then
	alias snapconfs='snapper list-configs --columns config |tail -n +3'
	__delete_root_snapshots() { snapper -c root delete 0-$(snapper -c root ls |awk 'END{print $1}') ; }
fi

ff () {
  local d=.
  if [ $# = 2 ]
  then
    d=$1
    shift
  fi
  if [ $# != 1 ]
  then
    echo usage: ff [dir] string
    return
  fi
  find $d -iname \*$1\* ! -iname '.*git.*' 2> /dev/null
}

alias count-files='for x in . */ ; do printf "%s\t%s\n" $(find $x -type f 2>/dev/null|wc -l) $x; done |sort -n'
